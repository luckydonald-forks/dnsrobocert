name: release

on:
  push:
    tags: ["v3.*"]

jobs:
  main:
    uses: ./.github/workflows/main.yml
  pypi:
    runs-on: ubuntu-latest
    needs: [main]
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - run: |
          uv build
          uv publish --username "${PYPI_USERNAME}" --password "${PYPI_PASSWORD}"
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  docker:
    runs-on: ubuntu-latest
    needs: [main]
    steps:
      - uses: actions/checkout@v4
      - name: Get project version
        run: |
          echo "VERSION=$(cat pyproject.toml | grep '^version = .*' | sed -E 's/version = "(.*)"/\1/g')" >> $GITHUB_ENV
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get commit and date
        run: |
          echo "COMMIT=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV
          echo "DATE=$(date -u +%Y%m%d)" >> $GITHUB_ENV
      - name: Get image name
        run: |
          IMAGE="${{ vars.DOCKER_IMAGE }}"
          if [ -z "$IMAGE" ]; then
            IMAGE="adferrand/dnsrobocert"
          fi
          echo "IMAGE=${IMAGE}" >> $GITHUB_ENV
      - uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: >-
            adferrand/letsencrypt-dns:latest,
            adferrand/letsencrypt-dns:${{ env.COMMIT }},
            adferrand/letsencrypt-dns:${{ env.DATE }},
            adferrand/letsencrypt-dns:${{ env.DATE }}_${{ env.COMMIT }},
            adferrand/letsencrypt-dns:${{ env.VERSION }},
            ${{ env.IMAGE }}:latest,
            ${{ env.IMAGE }}:${{ env.COMMIT }},
            ${{ env.IMAGE }}:${{ env.DATE }},
            ${{ env.IMAGE }}:${{ env.DATE }}_${{ env.COMMIT }},
            ${{ env.IMAGE }}:${{ env.VERSION }}
  github-release:
    runs-on: ubuntu-latest
    needs: [pypi, docker]
    steps:
      - uses: actions/checkout@v4
      - name: Get project version
        run: |
          echo "VERSION=$(cat pyproject.toml | grep '^version = .*' | sed -E 's/version = "(.*)"/\1/g')" >> $GITHUB_ENV
      - name: Configure Python
        uses: actions/setup-python@v5
      - run: |
          python utils/extract_changelog.py ${VERSION} > release_${VERSION}.md
      - uses: softprops/action-gh-release@v2
        with:
          name: DNSroboCert ${{ env.VERSION }}
          body_path: release_${{ env.VERSION }}.md
